// Mocks generated by Mockito 5.3.0 from annotations
// in movie_list/test/data/repositories/movies_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_list/src/data/repositories/repositories.dart' as _i3;
import 'package:movie_list/src/domain/entities/entities.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieDetails_0 extends _i1.SmartFake implements _i2.MovieDetails {
  _FakeMovieDetails_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeMovieList_1 extends _i1.SmartFake implements _i2.MovieList {
  _FakeMovieList_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCredits_2 extends _i1.SmartFake implements _i2.Credits {
  _FakeCredits_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [MoviesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesRepository extends _i1.Mock implements _i3.MoviesRepository {
  MockMoviesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.MovieDetails> getMovieDetails(String? movieId) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetails, [movieId]),
          returnValue: _i4.Future<_i2.MovieDetails>.value(_FakeMovieDetails_0(
              this, Invocation.method(#getMovieDetails, [movieId])))) as _i4
          .Future<_i2.MovieDetails>);
  @override
  _i4.Future<_i2.MovieList> getTopRatedMovies(int? page) =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, [page]),
              returnValue: _i4.Future<_i2.MovieList>.value(_FakeMovieList_1(
                  this, Invocation.method(#getTopRatedMovies, [page]))))
          as _i4.Future<_i2.MovieList>);
  @override
  _i4.Future<_i2.MovieList> getPopularMovies(int? page) =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, [page]),
              returnValue: _i4.Future<_i2.MovieList>.value(_FakeMovieList_1(
                  this, Invocation.method(#getPopularMovies, [page]))))
          as _i4.Future<_i2.MovieList>);
  @override
  _i4.Future<_i2.Credits> getMovieCredits(String? movieId) =>
      (super.noSuchMethod(Invocation.method(#getMovieCredits, [movieId]),
              returnValue: _i4.Future<_i2.Credits>.value(_FakeCredits_2(
                  this, Invocation.method(#getMovieCredits, [movieId]))))
          as _i4.Future<_i2.Credits>);
}
